// Copyright 2011, 2012, 2013
//
// Maxime Reis (JRL/LAAS, CNRS/AIST)
// Sébastien Barthélémy (Aldebaran Robotics)
//
// This file is part of metapod.
// metapod is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// metapod is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// You should have received a copy of the GNU Lesser General Public License
// along with metapod.  If not, see <http://www.gnu.org/licenses/>.


// This file has been generated by the metapod robotbuilder library.

#include "simple_arm.hh"

namespace metapod {

const std::string simple_arm::Node0::joint_name = std::string("SHOULDER");
const std::string simple_arm::Node0::body_name = std::string("ARM");
const Spatial::Transform simple_arm::Node0::Xt = Spatial::Transform(
    matrix3dMaker(2.22045e-16, 0, 1, 0, 1, 0, -1, 0, 2.22045e-16),
    Vector3d(0, 0, 1));
const FloatType simple_arm::Node0::mass = 2.75;
const Spatial::Inertia simple_arm::Node0::I = spatialInertiaMaker(
    2.75,
    Vector3d(0, 0, -0.225),
    matrix3dMaker(0.0468703, 0, 0, 0, 0.0468703, 0, 0, 0, 0.000928125));

simple_arm::Node0::Node0():
  joint() {}

const std::string simple_arm::Node1::joint_name = std::string("ELBOW");
const std::string simple_arm::Node1::body_name = std::string("FOREARM");
const Spatial::Transform simple_arm::Node1::Xt = Spatial::Transform(
    matrix3dMaker(1, 0, 0, 0, 1, 0, 0, 0, 1),
    Vector3d(0, 0, -0.45));
const FloatType simple_arm::Node1::mass = 1.75;
const Spatial::Inertia simple_arm::Node1::I = spatialInertiaMaker(
    1.75,
    Vector3d(0, 0, -0.2),
    matrix3dMaker(0.0235667, 0, 0, 0, 0.0235667, 0, 0, 0, 0.000466667));

simple_arm::Node1::Node1():
  joint() {}

const std::string simple_arm::Node2::joint_name = std::string("WRIST");
const std::string simple_arm::Node2::body_name = std::string("HAND");
const Spatial::Transform simple_arm::Node2::Xt = Spatial::Transform(
    matrix3dMaker(1, 0, 0, 0, 1, 0, 0, 0, 1),
    Vector3d(0, 0, -0.4));
const FloatType simple_arm::Node2::mass = 0.5;
const Spatial::Inertia simple_arm::Node2::I = spatialInertiaMaker(
    0.5,
    Vector3d(0, 0, -0.075),
    matrix3dMaker(0.000946875, 0, 0, 0, 0.000946875, 0, 0, 0, 1.875e-05));

simple_arm::Node2::Node2():
  joint() {}



}

